#includepath "~/Documents/;%USERPROFILE%Documents";#include "basiljs/bundle/basil.js";function draw() {        var hash = new HashList();    var tf = b.selections()[0]; // this makes the selected item now being referred to as var tf. the [0] is because the "selection" always returns an array, and this referes to the first object in an array.            var words = b.words(tf.parentStory); // this is identifying the words from tf's whole story. tf.parentStory is acting like us highlighting the whole text.    var str;    for( var i = 0; i < words.length; i++){ //for all the words in the words array, add them to str, and then trim them of . , " etc        str = normalizeString(words[i].contents);        if (str == "") continue; // special case: nothing left after trimWord         //count the number of occurances        if( hash.hasKey(str) ){ // identifies a word from the array          //  b.println(str); // adds it to the console (seen in this program)            hash.set(str, hash.get(str) + 1); //adds 1 to the count for this word        } else {            hash.set( str, 1 ); // if the word didn't appear before, add it to the set with count 1       }    }        var keys = hash.getKeysByValues() ; // sorts it by the number of its occurences// getValues() ???        for( var i = 0; i < words.length; i++ ) { // for all the words in the words array               var word = words[i]; // word = the word currently being looked at       /*       if(word.contents == "the"){       b.println(hash.get("the"));          }    */       var frequency = hash.get( normalizeString (word.contents) ); // get the number of times the word occurs, the string is in contents, all dots and commas, etc have to be removed with trimWord as done while counting       frequency = b.constrain(frequency, 0, 150); // constrain this number to be between 0-150       frequency = b.map(frequency, 0, 150, 5, 50); // change the font to be between 3 - 72 porportionately.                 b.typo( word, "pointSize", frequency ); // change the font size of the word[i] to be the size of frequency    }}function normalizeString(myString) {            myString= b.trimWord(myString);        myString= myString.toLowerCase();         return myString;     }b.go();